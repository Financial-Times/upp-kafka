---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.service.name }}-zookeeper
  labels:
    chart: "{{ .Chart.Name | trunc 63 }}"
    chartVersion: "{{ .Chart.Version | trunc 63 }}"
    visualize: "true"
    app: {{ .Values.service.name }}-zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.service.name }}-zookeeper
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}-zookeeper
        visualize: "true"
    spec:
{{- if .Values.eksCluster }}
      tolerations:
      - key: kafka
        operator: Equal
        value: "false"
        effect: "NoSchedule"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: role
                operator: In
                values:
                - "kafka"
{{- else }}
      tolerations:
      # Making sure that Zookeeper will be scheduled on dedicated nodes. These nodes are tainted by the provisioner.
      - key: "dedicated"
        operator: "Equal"
        value: "kafka"
        effect: "NoSchedule"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kube-aws.coreos.com/role
                operator: In
                values:
                - kafka-worker
{{- end }}
      containers:
      - name: zookeeper
        image: {{ .Values.images.zookeeper }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: ZOO_LOG4J_PROP
          value: "ERROR, CONSOLE"
        ports:
        - containerPort: {{ .Values.ports.zookeeper }}
        livenessProbe:
          initialDelaySeconds: 30
          tcpSocket:
            port: {{ .Values.ports.zookeeper }}
        volumeMounts:
        - name: kafka-persistent-storage
          mountPath: /opt/zookeeper-3.4.13/data
          subPath: zk-data-3.4.13
        resources:
{{ toYaml .Values.zookeeperResources | indent 12 }}
      volumes:
        - name: kafka-persistent-storage
        {{- if eq .Values.ephemeral_storage true }}
          emptyDir: {}
        {{- else }}
          persistentVolumeClaim:
            claimName: "{{ .Values.service.name }}-pvc"
        {{- end }}
